{"version":3,"file":"static/js/467.665afcc7.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,GAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACoCM,IAFjC,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,uFACPT,EAAAA,GAAAA,IAAA,iBACXS,EADW,oBACQR,EADR,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAa,mCAAG,WAAMD,GAAN,uFACJT,EAAAA,GAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,KAAKO,MAJM,2CAAH,sDAObC,EAAgB,mCAAG,WAAMH,GAAN,uFACPT,EAAAA,GAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,qD,wJC9B7B,EAA4B,0BAA5B,EAAkE,0BAAlE,EAAoG,sBAApG,EAAgI,oBAAhI,EAA2J,qBAA3J,EAAuL,qBAAvL,EAAkN,oB,SCwFlN,EAnFe,WACb,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMX,EAAQU,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BR,EAAAA,EAAAA,UAAS,QAArC,eAAOS,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,oGAEID,EAAU,WAFd,UAGyBjB,EAAAA,EAAAA,IAAaC,GAHtC,UAI0B,KADhBO,EAHV,QAIeW,OAJf,yCAKaC,QAAQC,OACb,IAAIC,MAAJ,iCACAC,OAAM,SAAAC,GACNP,EAAU,WACX,KATP,OAWMA,EAAU,YACVR,EAAUD,GAZhB,0DAeIS,EAAU,QAfd,2DAJc,sBACThB,GADS,mCAsBdwB,EACD,GAAE,CAACxB,IASJ,OACE,iCACE,kBAAMyB,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAChBlB,EAAgB,CAAEX,MAAO4B,EAAME,SAAS9B,MAAM+B,QAC9CH,EAAMI,OACP,EAIG,WACE,kBACEC,UAAWC,EACXC,KAAK,OACLC,KAAK,QACLC,YAAY,sBAEd,mBAAQJ,UAAWC,EAAeC,KAAK,SAAvC,uBAIU,YAAXpB,IAAwB,SAAC,IAAD,IACb,aAAXA,GACC,eAAIkB,UAAWC,EAAf,SACG3B,EAAO+B,KAAI,SAAAC,GAAK,OACf,eAAmBN,UAAWC,EAA9B,UACE,UAAC,KAAD,CAASM,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM9B,GAA3C,WACE,gBACE+B,IAAG,0CAAqCL,EAAMM,aAC9CC,IAAKP,EAAMQ,MACXC,MAAM,MACNC,OAAO,MACPhB,UAAWC,KAEb,iBAAKD,UAAWC,EAAhB,WACE,0BAAOK,EAAMQ,SACb,0BAAOR,EAAMW,mBAEf,mBAAQf,KAAK,SAASF,UAAWC,EAAjC,sBAbKK,EAAME,GADA,MAsBnB,KAIP,C","sources":["components/Services/API.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.scss?c7a6","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f727d9c78f10445dbb338c23170004d';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async movieID => {\n  const response = await axios.get(\n    `/movie/${movieID}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesCast = async movieID => {\n  const response = await axios.get(\n    `/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async movieID => {\n  const response = await axios.get(\n    `/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbox\":\"Movies_searchbox__1HOfq\",\"btnSearch\":\"Movies_btnSearch__H05Xq\",\"items\":\"Movies_items__Ed9eb\",\"img\":\"Movies_img__W7Bci\",\"list\":\"Movies_list__ETJD+\",\"text\":\"Movies_text__mBzPy\",\"btn\":\"Movies_btn__m0UuO\"};","import { searchMovies } from '../../components/Services/API';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useSearchParams, useLocation } from 'react-router-dom';\nimport LoadingComponent from '../../components/Loader/Loader';\nimport css from './Movies.module.scss';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function fetchMovies() {\n      try {\n        setStatus('pending');\n        const movies = await searchMovies(query);\n        if (movies.length === 0) {\n          return Promise.reject(\n            new Error(`Sorry, we didn't infortmaion`)\n          ).catch(error => {\n            setStatus('rejected');\n          });\n        } else {\n          setStatus('resolved');\n          setMovies(movies);\n        }\n      } catch {\n        setStatus('idle');\n      }\n    }\n    fetchMovies();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const input = e.currentTarget;\n    setSearchParams({ query: input.elements.query.value });\n    input.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={css.searchbox}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Enter Movie Name\"\n        ></input>\n        <button className={css.btnSearch} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {status === 'pending' && <LoadingComponent />}\n      {status === 'resolved' ? (\n        <ul className={css.items}>\n          {movies.map(movie => (\n            <li key={movie.id} className={css.list}>\n              <NavLink to={`${movie.id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={movie.title}\n                  width=\"300\"\n                  height=\"450\"\n                  className={css.img}\n                />\n                <div className={css.text}>\n                  <span>{movie.title}</span>\n                  <span>{movie.vote_average}</span>\n                </div>\n                <button type=\"button\" className={css.btn}>\n                  More\n                </button>\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","searchMovies","query","getMoviesDetails","movieID","getMoviesCast","cast","getMoviesReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","status","setStatus","useEffect","length","Promise","reject","Error","catch","error","fetchMovies","onSubmit","e","preventDefault","input","currentTarget","elements","value","reset","className","css","type","name","placeholder","map","movie","to","id","state","from","src","poster_path","alt","title","width","height","vote_average"],"sourceRoot":""}